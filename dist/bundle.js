(()=>{"use strict";var t,e=function(){function t(t,e,n,i,r){this.startIdx=t,this.endIdx=e,this.width=n,this.height=i,this.spritesPerRow=r,this.currSpriteIdx=0}return t.prototype.getUpdate=function(){return this.currSpriteIdx++,this.currSpriteIdx>this.endIdx&&(this.currSpriteIdx=this.startIdx),{x:this.currSpriteIdx%this.spritesPerRow*this.width,y:this.currSpriteIdx/this.spritesPerRow,width:this.width,height:this.height}},t}(),n=new(function(){function t(){}return t.prototype.initContext=function(t){this.context=t},t.prototype.updateViewport=function(t){this.viewport=t},t.prototype.loadingIdleManSource=function(t){var e,n;this.idleManSource=(e=t,(n=new Image).src=e,n)},t}()),i=(t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)},function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}),r=function(t){function e(){var e=t.call(this,0,5,128,128,6)||this;return e.image=n.idleManSource,e.posX=100,e.posY=100,e}return i(e,t),e.prototype.update=function(){},e.prototype.render=function(){var t=this.getUpdate();n.context.drawImage(this.image,t.x,t.y,t.width,t.height)},e}(e),o=function(){return window.performance&&window.performance.now?window.performance.now():(new Date).getTime()},c=function(){function t(){this.tpf=60,this.context=n.context,this.viewport=n.viewport,this.init()}return t.prototype.init=function(){this.mainIdl=new r},t.prototype.update=function(t){this.context.clearRect(0,0,this.viewport.width,this.viewport.height),this.mainIdl.update()},t.prototype.render=function(t){},t.prototype.run=function(){var t=this,e=0,n=0,i=o(),r=1e3/30;t.frameId=requestAnimationFrame((function c(){for(e=o(),n+=Math.min(1e3,e-i);n>r;)n-=r,t.update(r);t.render(n),i=e,t.frameId=requestAnimationFrame(c)}))},t.prototype.stop=function(){cancelAnimationFrame(this.frameId)},t}();!function(){var t=document.body.getBoundingClientRect(),e=document.body.getElementsByTagName("canvas")[0];!e&&(e=document.createElement("canvas"));var i=e.getContext("2d"),r=t.width,o=t.height;document.body.appendChild(e),e.setAttribute("width",r.toString()),e.setAttribute("height",o.toString()),n.initContext(i),n.updateViewport({width:r,height:o}),n.loadingIdleManSource("./assets/sprites/citymen/idle.png"),(new c).run()}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,